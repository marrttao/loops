# Generated by Qodo Gen

import unittest
from main import simple_number
class TestSimpleNumber(unittest.TestCase):

    # The function correctly identifies and prints all prime numbers in a given range
    def test_identifies_primes_in_range(self):
        from io import StringIO
        import sys

        # Redirect stdout to capture print statements
        captured_output = StringIO()
        sys.stdout = captured_output

        simple_number(1, 10)

        # Reset redirect.
        sys.stdout = sys.stdout

        # Check if the output is as expected
        self.assertEqual(captured_output.getvalue().strip(), "2\n3\n5\n7")

    # The function is tested with a range that includes negative numbers
    def test_range_with_negative_numbers(self):
        from io import StringIO
        import sys

        # Redirect stdout to capture print statements
        captured_output = StringIO()
        sys.stdout = captured_output

        simple_number(-10, 10)

        # Reset redirect.
        sys.stdout = sys.stdout

        # Check if the output is as expected
        self.assertEqual(captured_output.getvalue().strip(), "2\n3\n5\n7")

    # The function is tested with a range where a is greater than b
    def test_range_a_greater_than_b(self):
        from io import StringIO
        import sys

        # Redirect stdout to capture print statements
        captured_output = StringIO()
        sys.stdout = captured_output

        simple_number(10, 1)

        # Reset redirect.
        sys.stdout = sys.stdout

        # Check if the output is as expected (should be empty)
        self.assertEqual(captured_output.getvalue().strip(), "")


